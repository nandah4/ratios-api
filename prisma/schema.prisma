generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id        String     @id @default(uuid())
    username  String     @unique
    fullName  String
    password  String
    photoUrl  String
    email     String     @unique
    address   String
    createdAt DateTime   @default(now())
    updatedAt DateTime   @default(now())
    isDeleted Boolean    @default(false)
    photos    Photo[]
    albums    Album[]
    comentars Comentar[]
    likes     Like[]
}

model Photo {
    id           String     @id @default(uuid())
    userId       String
    title        String
    description  String
    locationFile String
    createdAt    DateTime   @default(now())
    updatedAt    DateTime   @default(now())
    isDeleted    Boolean    @default(false)
    user         User       @relation(fields: [userId], references: [id])
    comentars    Comentar[]
    likes        Like[]
}

model Album {
    id          String   @id @default(uuid())
    userId      String
    user        User     @relation(fields: [userId], references: [id])
    title       String
    description String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now())
    isDeleted   Boolean  @default(false)
}

model Comentar {
    id        String   @id @default(uuid())
    userId    String
    user      User     @relation(fields: [userId], references: [id])
    photoId   String
    photo     Photo    @relation(fields: [photoId], references: [id])
    comentar  String
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
    isDeleted Boolean  @default(false)
}

model Like {
    userId  String
    user    User   @relation(fields: [userId], references: [id])
    photoId String
    photo   Photo  @relation(fields: [photoId], references: [id])

    @@id([userId, photoId])
}
